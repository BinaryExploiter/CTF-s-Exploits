Recon:

Welcome Disassembly:
0x08048618 : Toddler's Secure Login System 1.0 beta.
0x0804862f : Enter Your Name
0x08048639 : Checking Name(%s, Taking 100 Bytes From Input)
0x0804863e : Welcome Message

Login Disassembly:
0x0804856a : Enter Passcode1
0x08048586 : Checking Passcode1(%d, Reading Integer Value)
0x08048593 : fflush(The function fflush(stdin) is used to flush or clear the output buffer of the stream. When it is used after the scanf(), it flushes the input buffer also)
0x08048598 : Enter Passcode2
0x080485b4 : Checking Passcode2(%d, Reading Integer Value)

Important:
0x080485d7 : Login OK
0x080485e3 : Printing Flag
0x080485f1 : Login Failed

Execution:
1.0x08048618 : Toddler's Secure Login System 1.0 beta.
2.0x0804862f : Enter Your Name
3.0x08048639 : Checking Name(%s, Taking 100 Bytes From Input)
4.0x0804863e : Welcome Message
5.0x0804856a : Enter Passcode1
6.0x08048586 : Checking Passcode1(%d, Reading Integer Value)
7.0x08048593 : fflush
8.0x080485f1 : Login Failed

Exploitation Technique:

Bug:
Both Passcode1 And Passcode2 Values Are Getting Stored In Pointers As Hex Values Not As Integers.
This May Allow Us To Write Our Own Address In The Pointers And Then Execute Them.

Vulnerability:
Partial-Relro Is Enabled Means GOT Can Be Overwrite.
Values Are Getting Stored In Pointers As Hex(Addresses).
Name Of Vulnerability Is Hijack GOT With Pointers.

Exploitation Steps:
1.First We Have To Fill The Buffer Until We Reached The First Pointer(Passcode1).
2.Then Add The Address Of GOT We Want To Overwrite And Then It Will Stored As An Hex In The Pointer So It Will Get Executed.
3.Overwrite The Value Of GOT.
4.Convert The Hex Into Decimal You Want To Write In GOT.

Offset:
Name: ebp-0x70
Passcode1: ebp-0x10
Passcode2: ebp-0xc

Name - Passcode1 = 0x70 - 0x10 = 96

Name Offset(Buffer-Size): 96
